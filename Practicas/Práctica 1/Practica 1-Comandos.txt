1. Insertar un alumno mujer con dos materias y padre de apellido "Torres".
db.alumnos.insertOne({
     nombres: "Maria",
     apellidos: "Torres",
     sexo: "F",
     casado: false,
     fecha_nacimiento: new Date("2001-05-10"),
     materias: ["SIS256", "SIS311"],
     padre: { nombre: "Juan", apellido: "López" }
 })

2. Insertar cinco alumnos a la vez con datos variados.
db.alumnos.insertMany([
  { nombres: "Pedro", apellidos: "Quispe", sexo: "M", casado: false,
    fecha_nacimiento: new Date("1997-02-11"), materias: ["SIS258"], padre: { nombre: "Juan", apellido: "Quispe" } },
  { nombres: "Lucía", apellidos: "Martínez", sexo: "F", casado: true,
    fecha_nacimiento: new Date("1998-12-30"), materias: ["COM350","SIS256"], padre: { nombre: "Miguel", apellido: "Martínez" } },
  { nombres: "Diego", apellidos: "Paz", sexo: "M", casado: false,
    fecha_nacimiento: new Date("2003-06-25"), materias: ["SIS256","SIS258","SIS00"], padre: { nombre: "Carlos", apellido: "Paz" } },
  { nombres: "Sofía", apellidos: "Ríos", sexo: "F", casado: false,
    fecha_nacimiento: new Date("2004-09-08"), materias: ["COM350"], padre: { nombre: "Luis", apellido: "Ríos" } },
  { nombres: "Andrés", apellidos: "Mendoza", sexo: "M", casado: true,
    fecha_nacimiento: new Date("1995-01-19"), materias: ["SIS256","SIS258","COM350","SIS00"], padre: { nombre: "Miguel", apellido: "Mendoza" } }
])

3. Insertar un alumno sin campo padre.
db.alumnos.insertOne({
     nombres: "Rodrigo",
     apellidos: "Vedia Zarate",
     sexo: "M",
     casado: false,
     fecha_nacimiento: new Date("2001-05-10"),
     materias: ["SIS256", "SIS428"],
 })

4. Insertar un alumno hombre casado, nacido en 1990.
db.alumnos.insertOne({
  nombres: "Hernán", apellidos: "Lima", sexo: "M", casado: true,
  fecha_nacimiento: new Date("1990-07-10"), materias: ["SIS256","COM350"],
  padre: { nombre: "Juan", apellido: "Lima" }
})

5. Insertar un alumno con 4 materias y padre "Carlos Pérez".
db.alumnos.insertOne({
  nombres: "Ricardo", apellidos: "Salinas", sexo: "M", casado: false,
  fecha_nacimiento: new Date("1999-10-21"), materias: ["SIS256","SIS258","COM350","SIS00"],
  padre: { nombre: "Carlos", apellido: "Pérez" }
})

6. Insertar un alumno solo con "COM350" como materia.
db.alumnos.insertOne({
     nombres: "Nataly",
     apellidos: "Villca",
     sexo: "F",
     casado: false,
     fecha_nacimiento: new Date("2001-08-19"),
     materias: ["COM350"],
     padre: { nombre: "Alvaro", apellido: "Gomez" }
})

7. Listar alumnos cuyo padre tenga nombre "Luis" o "Miguel".
db.alumnos.find({ "padre.nombre": { $in: ["Luis", "Miguel"] } })

8. Mostrar alumnos no casados que tengan "SIS256".
db.alumnos.find({ materias: { $in: ["SIS256"] } },casado: true })

9. Contar alumnos con más de 2 materias.
db.alumnos.find({materias: { $size: 3 } })

10. Mostrar los 10 más viejos con nombres y fecha_nacimiento.
db.alumnos.find({}, { _id: 0, nombres: 1, apellidos: 1, fecha_nacimiento: 1 })
          .sort({ fecha_nacimiento: 1 }).limit(10)
11. Buscar alumnos con "COM350" y "SIS00".
db.alumnos.find({ materias: { $all: ["COM350", "SIS00"] } })

12. Mostrar solo nombres y sexo de los alumnos mujeres.
db.alumnos.find({ sexo: "F" }, { _id: 0, nombres: 1, sexo: 1 })

13. Ordenar todos los alumnos por apellido ascendente.
db.alumnos.find({}, { nombres: 1, apellidos: 1 }).sort({ apellidos: 1 })

14. Listar alumnos nacidos entre 1998 y 2003.
db.alumnos.find({
  fecha_nacimiento: { $gte: new Date("1998-01-01"), $lte: new Date("2003-12-31") }
})

15. Mostrar alumnos cuyo apellido termine en "ez".
db.alumnos.find({apellidos: { $regex: /ez$/ }})

16. Contar alumnos casados y con "SIS258".
db.alumnos.find({casado: true, materias: "SIS258"})

17. Cambiar el nombre "Luis" por "Luis Alberto".
db.alumnos.updateMany({ nombres: "Luis" }, { $set: { nombres: "Luis Alberto" } })

18. Agregar "SIS777" a todos los alumnos con "COM350".
db.alumnos.updateMany({ materias: "COM350" }, { $addToSet: { materias: "SIS777" } })

19. Poner casado: false a todos los alumnos con menos de 2 materias.
db.alumnos.updateMany(
  { $expr: { $lt: [ { $size: "$materias" }, 2 ] } },
  { $set: { casado: false } }
)

20. Quitar "SIS256" de todos los que la tengan.
db.alumnos.updateMany({materias: "SIS256"},{$pull: {materias: "SIS256"}})

21. Cambiar el nombre del padre "Juan" a "Juan José".
db.alumnos.updateMany({ "padre.nombre": "Juan" }, { $set: { "padre.nombre": "Juan José" } })

22. Agregar un campo activo: true a todos los documentos.
db.alumnos.updateMany({}, { $set: { activo: true } })

23. Eliminar todos los alumnos hombres.
db.alumnos.deleteMany({sexo: "M"})

24. Eliminar a quien tenga "SIS777" como materia.
db.alumnos.deleteMany({materias: "SIS777"})

25. Eliminar a los alumnos cuyo padre tenga apellido "Ramírez".
db.alumnos.deleteMany({ "padre.apellido": "Ramírez" })

26. Eliminar a los que nacieron después de 2004.
db.alumnos.deleteMany({ fecha_nacimiento: { $lt: new Date("2004-12-31") } })

27. Eliminar todos los casados.
db.alumnos.deleteMany({ casado: true })

28. Eliminar al primer alumno que tenga "SIS258".
db.alumnos.deleteOne({materias: "SIS258"})